generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  followers Int        @default(0)
  username  String?
  comments  Comment[]
  inscribes Inscribe[]
  likes     Like[]

  @@unique([email, password])
}

model Inscribe {
  id        String    @id @default(uuid())
  title     String
  content   String
  authorId  String
  createdAt DateTime  @default(now())
  comments  Comment[]
  author    User      @relation(fields: [authorId], references: [id])
}

model Comment {
  id         String    @id @default(uuid())
  content    String
  authorId   String
  inscribeId String
  createdAt  DateTime  @default(now())
  parentId   String?
  updatedAt  DateTime  @updatedAt
  author     User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  inscribe   Inscribe  @relation(fields: [inscribeId], references: [id], onDelete: Cascade)
  parent     Comment?  @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
  children   Comment[] @relation("ParentChild")
  likes      Like[]
}

model Like {
  userId    String
  commentId String
  comment   Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, commentId])
}
